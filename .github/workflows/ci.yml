name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  MLFLOW_TRACKING_URI: http://127.0.0.1:5000

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.10.6

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Start MLflow Server
      run: |
        mlflow server --host 127.0.0.1 --port 5000 &  # Run MLflow server in the background
        echo $! > mlflow_pid.txt

    - name: Run tests
      run: |
        pytest test_unitaires/

  deploy:
    runs-on: ubuntu-latest  # Or any runner of your choice
    needs: build  # Ensure the build job runs before deployment
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          echo "PA_USERNAME=${{ secrets.PA_USERNAME }}" >> $GITHUB_ENV
          echo "PA_PASSWORD=${{ secrets.PA_PASSWORD }}" >> $GITHUB_ENV

      - name: Install SSH client (if not already installed)
        run: sudo apt-get install -y openssh-client

      - name: Deploy to PythonAnywhere using SCP
        run: |
          scp -r ./app $PA_USERNAME@pythonanywhere.com:/home/$PA_USERNAME/mysite/
        env:
          PA_USERNAME: ${{ secrets.PA_USERNAME }}
          PA_PASSWORD: ${{ secrets.PA_PASSWORD }}

      - name: SSH command to restart app on PythonAnywhere
        run: |
          ssh $PA_USERNAME@pythonanywhere.com "source ~/myenv/bin/activate && cd ~/mysite && streamlit run app.py"
        env:
          PA_USERNAME: ${{ secrets.PA_USERNAME }}
          PA_PASSWORD: ${{ secrets.PA_PASSWORD }}
